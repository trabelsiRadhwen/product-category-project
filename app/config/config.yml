imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@GroceryBundle/Resources/config/services.yml" }
    - { resource: "@ApiBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    app.path.product_images: /uploads/images/products

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

#vich_image_file_uploader
vich_uploader:
    db_driver: orm
    mappings:
        product_images:
            uri_prefix:         '%app.path.product_images%'
            upload_destination: '%kernel.root_dir%/../web%app.path.product_images%'

# FOSREStBundle config

fos_rest:
    routing_loader:
        include_format: false
    view:
        view_response_listener: true
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json'], fallback_format: 'json' }
            - { path: '^/', priorities: [ 'text/html', '*/*'], fallback_format: html, prefer_extension: true }
            - { path: '^/admin', methods: [ 'GET', 'POST'], priorities: [ 'xml', 'html'], fallback_format: ~, prefer_extension: false }


#EasyAdminBundle Configuration
easy_admin:
  site_name: 'GROCERY'
  design:
      brand_color: '#29B6F6'
      color_scheme: 'light'
      menu:
          - Product
          - Category
          - User
  entities:
      User:
          class: GroceryBundle\Entity\User
          form:
              fields:
                  - username
                  - email
                  - enabled
                  - lastLogin
                  # if administrators are allowed to edit users' passwords and roles, add this:
                  - { property: 'plainPassword', type: 'text', type_options: { required: false } }
                  - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
          list:
              title: Users
              fields:
                - id
                - username
                - email
                - enabled
                - roles
                - { property: 'lastLogin',type: 'datetime' ,format: 'l jS F Y g:ia'}
              actions:
                - { name: 'show', icon: 'search', label: 'Show'}
                - { name: 'new', icon: 'plus', label: 'Add'}
                - { name: 'delete', icon: 'trash', label: 'Delete'}
                - { name: 'edit', icon: 'pencil', label: 'Edit'}

          new:
              title: Ajouter nouveau utilisateur
          edit:
              title: Modifier l'utilisateur

      Product:
          class: GroceryBundle\Entity\Product
          form:
              fields:
                - product
                - libelle
                - price
                - category
                - { property: 'imageFile', type: 'vich_image' }
          list:
              title: Products
              fields:
                - id
                - product
                - libelle
                - price
                - category
                - { property: 'image', type: 'image', base_path: '%app.path.product_images%' }
              actions:
                - { name: 'show', icon: 'search', label: 'Show'}
                - { name: 'new', icon: 'plus', label: 'Add'}
                - { name: 'delete', icon: 'trash', label: 'Delete'}
                - { name: 'edit', icon: 'pencil', label: 'Edit'}
          search:
              title: Search
          new:
              title: Ajouter nouveau produit
              form_options: { validation_groups: ['Default', 'Customer'] }
          edit:
              title: Modifier produit
          show:
              title: Product
              fields:
                - id
                - product
                - libelle
                - price
                - category
                - { property: 'image', type: 'image', base_path: '%app.path.product_images%' }

      Category:
          class: GroceryBundle\Entity\Category
          list:
              title: Categories
              actions:
                - { name: 'show', icon: 'search', label: 'Show'}
                - { name: 'new', icon: 'plus', label: 'Add'}
                - { name: 'delete', icon: 'trash', label: 'Delete'}
                - { name: 'edit', icon: 'pencil', label: 'Edit'}
          new:
              title: Ajouter nouvelle categorie
              form_options: { validation_groups: ['Default', 'Customer'] }
          edit:
              title: Modifier categorie


#fos user bundle config
fos_user:
    db_driver: orm # other valid values are 'mongodb' and 'couchdb'
    firewall_name: main
    user_class: GroceryBundle\Entity\User
    service:                               # this lines
        mailer: fos_user.mailer.twig_swift
    from_email:
        address: "radhwen.6tr@gmail.com"
        sender_name: "Grocery"
